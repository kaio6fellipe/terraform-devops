name: Terraform destroy

on: 
  workflow_dispatch:
    inputs:
      dir:
        description: 'Directory with resources to be destroyed'
        required: true
        default: .
    branches: [development]

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TF_VAR_SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  TF_VAR_AWS_RDS_PASSWORD: ${{ secrets.AWS_RDS_PASSWORD }}
  TF_VAR_ANSIBLE_VAULT_PASSWORD: ${{ secrets.ANSIBLE_VAULT_PASSWORD }}
  TF_VAR_ADMIN_USER_ARN: ${{ secrets.ADMIN_USER_ARN }}
  TF_VAR_ADMIN_USER_NAME: ${{ secrets.ADMIN_USER_NAME }}
  TF_WARN_OUTPUT_ERRORS: 1

jobs:
  destroy:
    name: 'Terraform destroy'
    runs-on: ubuntu-latest
    
    defaults:
      run:
        shell: bash
        working-directory: .

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install boto3 and other packages
        run: pip install boto3==1.26.114

      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.4

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init -backend=true -backend-config="global/backend.hcl"

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Refresh
        run: terraform refresh -var-file="global/terraform.tfvars"

      - name: Terraform Destroy
        run: terraform destroy -auto-approve -var-file="global/terraform.tfvars"