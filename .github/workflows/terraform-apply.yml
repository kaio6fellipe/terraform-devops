name: Terraform apply

on:
  push:
    branches: [development]
    paths-ignore:
      - 'Dockerfile'
      - 'Makefile'
      - 'help.mk'
      - '.github/workflows/build.yml'
  workflow_dispatch:
    inputs:
      log_level:
        type: choice
        description: Log Level
        required: false
        options:
          - ERROR
          - WARN
          - INFO
          - DEBUG
          - TRACE

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TF_VAR_SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  TF_VAR_AWS_RDS_PASSWORD: ${{ secrets.AWS_RDS_PASSWORD }}
  TF_VAR_ANSIBLE_VAULT_PASSWORD: ${{ secrets.ANSIBLE_VAULT_PASSWORD }}
  TF_VAR_ADMIN_USER_ARN: ${{ secrets.ADMIN_USER_ARN }}
  TF_VAR_ADMIN_USER_NAME: ${{ secrets.ADMIN_USER_NAME }}
  TF_VAR_ARGO_GITHUB_SSO_SECRET_KEY: ${{ secrets.ARGO_GITHUB_SSO_SECRET_KEY }}
  TF_VAR_CROSSPLANE_AWS_CREDENTIALS_CONTENT: ${{ secrets.CROSSPLANE_AWS_CREDENTIALS_CONTENT }}
  TF_LOG: ${{ inputs.log_level }}

jobs:
  sonarcloud:
    name: Security check
    uses: kaio6fellipe/terraform-devops/.github/workflows/sonar.yml@development
    secrets:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  tflint:
    name: Lint check
    uses: kaio6fellipe/terraform-devops/.github/workflows/tflint.yml@development
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  tfsec:
    name: Terraform Security check
    uses: kaio6fellipe/terraform-devops/.github/workflows/tfsec.yml@development

  checkov:
    name: Checkov Security check
    uses: kaio6fellipe/terraform-devops/.github/workflows/checkov.yml@development

  apply:
    name: 'Terraform apply'
    needs: [sonarcloud,tflint,tfsec,checkov]
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: .

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # - name: Echo github obj
      #   run: echo ${{ toJson(github.event) }}
      #   continue-on-error: true

      # GitActions CIDR commented because aws have a limit of 40 entries, with free runner there is no way to get the egress IP to allow public connections to EKS clusters
      # Ref: https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#example-of-a-multiline-string
      # - name: Get GitActions egress CIDR blocks
      #   run: |
      #     source ./lib/github-meta-info
      #     EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
      #     echo "TF_VAR_GITHUB_ACTIONS_CIDR<<$EOF" >> $GITHUB_ENV
      #     function_get_cidr >> $GITHUB_ENV
      #     echo "$EOF" >> $GITHUB_ENV

      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.4

      - name: Check AWS CLI version
        id: aws-version
        run: aws --version

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init -backend=true -backend-config="global/backend.hcl"

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Apply
        id: apply1
        run: terraform apply -auto-approve -var-file="global/terraform.tfvars"
        continue-on-error: true

      # Second apply to configure resources that depends on data sources for authentication, like eks-cluster auth
      - name: Terraform Apply (Double check)
        id: apply2
        run: terraform apply -auto-approve -var-file="global/terraform.tfvars"
        continue-on-error: true

      # - name: Post to a Slack channel
      #   id: slack
      #   uses: slackapi/slack-github-action@v1.19.0
      #   with:
      #     channel-id: 'C03PQ7DSHA9'
      #     payload: |
      #       {
      #         "text": "Terraform apply on repo terraform-devops result: ${{ steps.apply2.outcome }}\nURL: ${{ github.event.pull_request.html_url || github.event.head_commit.url }}",
      #         "blocks": [
      #           {
      #             "type": "section",
      #             "text": {
      #               "type": "mrkdwn",
      #               "text": "Terraform apply on repo terraform-devops result: ${{ steps.apply2.outcome }}\nURL: ${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
      #             }
      #           }
      #         ]
      #       }
      #   env:
      #     SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

      - name: Terraform Apply Status
        if: steps.apply2.outcome == 'failure'
        run: exit 1

  documentation:
    name: Generate docs
    needs: apply
    uses: kaio6fellipe/terraform-devops/.github/workflows/documentation.yml@development
    secrets:
      GITHUBREF: development
