name: Terraform apply

on: 
  push:
    branches: [development]
  workflow_dispatch:
    inputs:
      log_level:
        type: choice
        description: Log Level
        required: false
        options:
          - ERROR
          - WARN
          - INFO
          - DEBUG
          - TRACE

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TF_VAR_SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  TF_VAR_AWS_RDS_PASSWORD: ${{ secrets.AWS_RDS_PASSWORD }}
  TF_VAR_ANSIBLE_VAULT_PASSWORD: ${{ secrets.ANSIBLE_VAULT_PASSWORD }}
  TF_VAR_ADMIN_USER_ARN: ${{ secrets.ADMIN_USER_ARN }}
  TF_VAR_ADMIN_USER_NAME: ${{ secrets.ADMIN_USER_NAME }}
  TF_LOG: ${{ inputs.log_level }}

jobs:
  sonarcloud:
    name: Security check
    uses: kaio6fellipe/terraform-devops/.github/workflows/sonar.yml@development
    secrets:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  tflint:
    name: Lint check
    uses: kaio6fellipe/terraform-devops/.github/workflows/tflint.yml@development
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  tfsec:
    name: Terraform Security check
    uses: kaio6fellipe/terraform-devops/.github/workflows/tfsec.yml@development

  checkov:
    name: Checkov Security check
    uses: kaio6fellipe/terraform-devops/.github/workflows/checkov.yml@development

  apply:
    name: 'Terraform apply'
    needs: [sonarcloud,tflint,tfsec,checkov]
    runs-on: ubuntu-latest
    
    defaults:
      run:
        shell: bash
        working-directory: .

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.4

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init -backend=true -backend-config="global/backend.hcl"

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve -var-file="global/terraform.tfvars"

      - name: Post to a Slack channel
        id: slack
        uses: slackapi/slack-github-action@v1.19.0
        with:
          channel-id: 'C03PQ7DSHA9'
          payload: |
            {
              "text": "Terraform apply on repo terraform-devops result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "Terraform apply on repo terraform-devops result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
                  }
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
  documentation:
    name: Generate docs
    needs: apply
    uses: kaio6fellipe/terraform-devops/.github/workflows/documentation.yml@development
    secrets:
      GITHUBREF: development
